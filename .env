"use client";

import React, { useState, useEffect } from "react";

interface Category {
    id: number;
    title: string;
    parent_id: number | null;
    category_id: number;
    icon?: string;
    link: string;
    childrens?: Category[];
}

const CategoryDropdown: React.FC = () => {
    const [categories, setCategories] = useState<Category[]>([]);
    const [activeCategory, setActiveCategory] = useState<number | null>(null);
    const [activeSubCategory, setActiveSubCategory] = useState<number | null>(null);

    // Fetch categories data on component mount
    useEffect(() => {
        const fetchCategories = async () => {
            try {
                const res = await fetch("https://api.shope.com.bd/api/v1/public/hero-categories");
                const data = await res.json();
                setCategories(data);
            } catch (error) {
                console.error("Failed to fetch categories:", error);
            }
        };

        fetchCategories();
    }, []);

    console.log(categories)

    return (
        <div>
            <div>
                <ul>
                    {
                        categories?.map((category) =>
                            <>
                                <li>
                                    {category?.title}

                                </li>

                                {
                                    (category?.childrens) && <ul className="ms-60">
                                        {
                                            category?.childrens?.map((subcat) => <>
                                                <li>
                                                    {subcat?.title}

                                                </li>
                                                {
                                                    (subcat?.childrens)&& <ul className="ms-60">

                                                        {
                                                         subcat?.childrens?.map((subSubCat)=><>
                                                         {subSubCat?.title}
                                                         </>)   
                                                        }
                                                    </ul>
                                                }
                                            </>)
                                        }
                                    </ul>
                                }
                            </>)
                    }
                </ul>

            </div>

        </div>
    );
};

export default CategoryDropdown;
